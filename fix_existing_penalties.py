#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —à—Ç—Ä–∞—Ñ–æ–≤
"""

import os
import sys
import django
from datetime import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()

from apps.attendance.models import AttendanceRecord
from django.utils import timezone

def fix_existing_penalties():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —à—Ç—Ä–∞—Ñ—ã –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
    all_records = AttendanceRecord.objects.all()
    print(f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {all_records.count()}")
    
    if all_records.count() == 0:
        print("‚úÖ –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        return
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∏
    late_records = []
    on_time_records = []
    
    for record in all_records:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º UTC –≤—Ä–µ–º—è –≤ –º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è
        local_check_in = timezone.localtime(record.check_in)
        check_in_time = local_check_in.time()
        work_start_time = time(9, 0)
        
        print(f"DEBUG: {record.employee.get_full_name()} - UTC: {record.check_in}, Local: {local_check_in}, Time: {check_in_time}")
        
        if check_in_time > work_start_time:
            if not record.is_late or record.penalty_amount == 0:
                late_records.append(record)
        else:
            if record.is_late or record.penalty_amount > 0:
                on_time_records.append(record)
    
    print(f"üìä –ó–∞–ø–∏—Å–µ–π —Å –æ–ø–æ–∑–¥–∞–Ω–∏—è–º–∏ (—Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è): {len(late_records)}")
    print(f"üìä –ó–∞–ø–∏—Å–µ–π –≤–æ–≤—Ä–µ–º—è (—Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è): {len(on_time_records)}")
    
    if not late_records and not on_time_records:
        print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã!")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
    if late_records:
        print("\nüö® –ó–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—Ç —à—Ç—Ä–∞—Ñ:")
        for record in late_records[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            local_time = timezone.localtime(record.check_in)
            print(f"  ‚Ä¢ {record.employee.get_full_name()} - {record.date} {local_time.time()}")
        if len(late_records) > 10:
            print(f"  ... –∏ –µ—â–µ {len(late_records) - 10} –∑–∞–ø–∏—Å–µ–π")
    
    if on_time_records:
        print("\n‚úÖ –ó–∞–ø–∏—Å–∏, —Å –∫–æ—Ç–æ—Ä—ã—Ö —Å–Ω–∏–º—É—Ç —à—Ç—Ä–∞—Ñ:")
        for record in on_time_records[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            local_time = timezone.localtime(record.check_in)
            print(f"  ‚Ä¢ {record.employee.get_full_name()} - {record.date} {local_time.time()}")
        if len(on_time_records) > 10:
            print(f"  ... –∏ –µ—â–µ {len(on_time_records) - 10} –∑–∞–ø–∏—Å–µ–π")
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    response = input(f"\n‚ùì –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è? (y/N): ").strip().lower()
    
    if response != 'y':
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    updated_count = 0
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å –æ–ø–æ–∑–¥–∞–Ω–∏—è–º–∏
    for record in late_records:
        old_penalty = record.penalty_amount
        old_is_late = record.is_late
        
        record.is_late = True
        record.penalty_amount = 500.00
        record.save()
        
        updated_count += 1
        local_time = timezone.localtime(record.check_in)
        print(f"  ‚úì {record.employee.get_full_name()} - {record.date} {local_time.time()}: "
              f"—à—Ç—Ä–∞—Ñ {old_penalty} ‚Üí {record.penalty_amount}, –æ–ø–æ–∑–¥–∞–Ω–∏–µ {old_is_late} ‚Üí {record.is_late}")
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤–æ–≤—Ä–µ–º—è
    for record in on_time_records:
        old_penalty = record.penalty_amount
        old_is_late = record.is_late
        
        record.is_late = False
        record.penalty_amount = 0.00
        record.save()
        
        updated_count += 1
        local_time = timezone.localtime(record.check_in)
        print(f"  ‚úì {record.employee.get_full_name()} - {record.date} {local_time.time()}: "
              f"—à—Ç—Ä–∞—Ñ {old_penalty} ‚Üí {record.penalty_amount}, –æ–ø–æ–∑–¥–∞–Ω–∏–µ {old_is_late} ‚Üí {record.is_late}")
    
    print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
    print("üéâ –®—Ç—Ä–∞—Ñ—ã —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    total_records = AttendanceRecord.objects.count()
    late_count = AttendanceRecord.objects.filter(is_late=True).count()
    total_penalties = sum(record.penalty_amount for record in AttendanceRecord.objects.all())
    
    print(f"  –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_records}")
    print(f"  –° –æ–ø–æ–∑–¥–∞–Ω–∏—è–º–∏: {late_count}")
    print(f"  –û–±—â–∞—è —Å—É–º–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤: {total_penalties} —Å–æ–º–æ–≤")

if __name__ == "__main__":
    try:
        fix_existing_penalties()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1) 