#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–∞—à–±–æ—Ä–¥–∞ –º–∞—Å—Ç–µ—Ä–∞
"""

import os
import sys
import django
from django.db import models

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from apps.operations.workshops.models import Workshop
from apps.users.models import User

def test_master_statistics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞—Å—Ç–µ—Ä–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ –º–∞—Å—Ç–µ—Ä–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∞—Å—Ç–µ—Ä –≤ —Å–∏—Å—Ç–µ–º–µ
    try:
        master = User.objects.filter(role='master').first()
        if not master:
            print("‚ùå –í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é 'master'")
            print("   –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é 'master' –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –º–∞—Å—Ç–µ—Ä: {master.get_full_name()} (ID: {master.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ü–µ—Ö–∞ —É –º–∞—Å—Ç–µ—Ä–∞
        managed_workshops = Workshop.objects.filter(
            models.Q(manager=master) | 
            models.Q(workshop_masters__master=master, workshop_masters__is_active=True)
        ).distinct()
        
        if not managed_workshops.exists():
            print("‚ùå –ú–∞—Å—Ç–µ—Ä –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∏ –æ–¥–Ω–∏–º —Ü–µ—Ö–æ–º")
            print("   –ù–∞–∑–Ω–∞—á—å—Ç–µ –º–∞—Å—Ç–µ—Ä–∞ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º —Ü–µ—Ö–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        print(f"‚úÖ –ú–∞—Å—Ç–µ—Ä —É–ø—Ä–∞–≤–ª—è–µ—Ç {managed_workshops.count()} —Ü–µ—Ö–∞–º–∏:")
        for workshop in managed_workshops:
            print(f"   - {workshop.name}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            stats = Workshop.get_master_statistics(master)
            if stats:
                print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞—Å—Ç–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ:")
                print(f"   - –í—Å–µ–≥–æ —Ü–µ—Ö–æ–≤: {stats['overall_stats']['total_workshops']}")
                print(f"   - –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats['overall_stats']['total_tasks']}")
                print(f"   - –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {stats['overall_stats']['completed_tasks']}")
                print(f"   - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {stats['overall_stats']['efficiency']:.1f}%")
                print(f"   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é: {stats['period_stats']['week']['completed_tasks']} –∑–∞–¥–∞—á")
                print(f"   - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü: {stats['period_stats']['month']['completed_tasks']} –∑–∞–¥–∞—á")
                
                print(f"   - –î–µ—Ç–∞–ª–∏ –ø–æ —Ü–µ—Ö–∞–º:")
                for workshop in stats['workshops']:
                    print(f"     * {workshop['name']}: {workshop['efficiency']:.1f}% —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")
                
                return True
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–∞—Å—Ç–µ—Ä–∞")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_urls():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL-–∞–¥—Ä–µ—Å–æ–≤"""
    print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ URL-–∞–¥—Ä–µ—Å–æ–≤...")
    
    urls_to_check = [
        '/workshops/master/',
        '/workshops/api/master/statistics/',
    ]
    
    for url in urls_to_check:
        print(f"   - {url} - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤")
    
    print("‚úÖ URL-–∞–¥—Ä–µ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

def test_templates():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —à–∞–±–ª–æ–Ω–æ–≤"""
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")
    
    templates = [
        'apps/operations/workshops/templates/master_dashboard.html',
        'apps/operations/workshops/templates/master_dashboard_mobile.html',
    ]
    
    for template in templates:
        if os.path.exists(template):
            print(f"   ‚úÖ {template}")
        else:
            print(f"   ‚ùå {template} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —à–∞–±–ª–æ–Ω—ã —Å–æ–∑–¥–∞–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–∞—à–±–æ—Ä–¥–∞ –º–∞—Å—Ç–µ—Ä–∞")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã
    test_templates()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL-–∞–¥—Ä–µ—Å–∞
    test_urls()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    success = test_master_statistics()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("   –°–∏—Å—Ç–µ–º–∞ –¥–∞—à–±–æ—Ä–¥–∞ –º–∞—Å—Ç–µ—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ")
    
    print("\nüìã –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞—à–±–æ—Ä–¥—É –º–∞—Å—Ç–µ—Ä–∞:")
    print("   1. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é 'master'")
    print("   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ /workshops/master/")
    print("   3. –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ú–æ–π –¥–∞—à–±–æ—Ä–¥' –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ü–µ—Ö–æ–≤")

if __name__ == '__main__':
    main() 