#!/usr/bin/env python
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∏ —à—Ç—Ä–∞—Ñ–æ–≤
"""

import os
import sys
import django
from datetime import datetime, time, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()

from apps.attendance.models import AttendanceRecord
from django.contrib.auth import get_user_model

User = get_user_model()

def test_attendance_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∏ —à—Ç—Ä–∞—Ñ–æ–≤...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    try:
        test_user = User.objects.first()
        if not test_user:
            print("‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ")
            return
        print(f"üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.get_full_name()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
    today = datetime.now().date()
    existing_records = AttendanceRecord.objects.filter(
        employee=test_user, 
        date=today
    )
    
    print(f"\nüìÖ –ó–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è ({today}): {existing_records.count()}")
    
    for record in existing_records:
        print(f"  ‚Ä¢ –í—Ä–µ–º—è –ø—Ä–∏—Ö–æ–¥–∞: {record.check_in.time()}")
        print(f"    –û–ø–æ–∑–¥–∞–Ω–∏–µ: {record.is_late}")
        print(f"    –®—Ç—Ä–∞—Ñ: {record.penalty_amount} —Å–æ–º–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
        expected_late = record.check_in.time() > time(9, 0)
        expected_penalty = 500.00 if expected_late else 0.00
        
        if record.is_late != expected_late:
            print(f"    ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: is_late –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å {expected_late}")
        
        if record.penalty_amount != expected_penalty:
            print(f"    ‚ö†Ô∏è  –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: penalty_amount –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å {expected_penalty}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
    current_time = datetime.now()
    test_record = AttendanceRecord(
        employee=test_user,
        date=today,
        check_in=current_time
    )
    
    print(f"  –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: {current_time.time()}")
    print(f"  –û–∂–∏–¥–∞–µ–º–æ–µ –æ–ø–æ–∑–¥–∞–Ω–∏–µ: {current_time.time() > time(9, 0)}")
    print(f"  –û–∂–∏–¥–∞–µ–º—ã–π —à—Ç—Ä–∞—Ñ: {500.00 if current_time.time() > time(9, 0) else 0.00}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    test_record.save()
    
    print(f"  –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:")
    print(f"    is_late: {test_record.is_late}")
    print(f"    penalty_amount: {test_record.penalty_amount}")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
    test_record.delete()
    print("  ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ recalculate_penalty
    print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ recalculate_penalty...")
    
    if existing_records.exists():
        test_record = existing_records.first()
        print(f"  –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å: {test_record.check_in.time()}")
        
        old_late = test_record.is_late
        old_penalty = test_record.penalty_amount
        
        changed = test_record.recalculate_penalty()
        print(f"  –ò–∑–º–µ–Ω–µ–Ω–∏—è: {changed}")
        print(f"    is_late: {old_late} ‚Üí {test_record.is_late}")
        print(f"    penalty_amount: {old_penalty} ‚Üí {test_record.penalty_amount}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        test_record.is_late = old_late
        test_record.penalty_amount = old_penalty
        test_record.save()
        print("  ‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    try:
        test_attendance_system()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1) 