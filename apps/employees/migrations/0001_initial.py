# Generated by Django 5.2.4 on 2025-07-12 07:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact', models.CharField(blank=True, max_length=150, verbose_name='Контакт для экстренной связи')),
                ('emergency_phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон экстренной связи')),
                ('address', models.TextField(blank=True, verbose_name='Адрес проживания')),
                ('alternative_phone', models.CharField(blank=True, max_length=20, verbose_name='Дополнительный телефон')),
                ('skype', models.CharField(blank=True, max_length=100, verbose_name='Skype')),
                ('telegram', models.CharField(blank=True, max_length=100, verbose_name='Telegram')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Контактная информация',
                'verbose_name_plural': 'Контактная информация',
            },
        ),
        migrations.CreateModel(
            name='EmployeeMedicalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_examination_date', models.DateField(blank=True, null=True, verbose_name='Дата медосмотра')),
                ('medical_examination_expiry', models.DateField(blank=True, null=True, verbose_name='Дата истечения медосмотра')),
                ('medical_book_number', models.CharField(blank=True, max_length=50, verbose_name='Номер медицинской книжки')),
                ('medical_book_issue_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи медкнижки')),
                ('medical_book_expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата истечения медкнижки')),
                ('blood_type', models.CharField(blank=True, max_length=10, verbose_name='Группа крови')),
                ('allergies', models.TextField(blank=True, verbose_name='Аллергии')),
                ('chronic_diseases', models.TextField(blank=True, verbose_name='Хронические заболевания')),
                ('medications', models.TextField(blank=True, verbose_name='Принимаемые лекарства')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_info', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Медицинская информация',
                'verbose_name_plural': 'Медицинская информация',
            },
        ),
        migrations.CreateModel(
            name='EmployeeNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('text', models.TextField(verbose_name='Текст уведомления')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Уведомление сотрудника',
                'verbose_name_plural': 'Уведомления сотрудников',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_works', models.IntegerField(default=0, verbose_name='Выполнено работ за месяц')),
                ('defects', models.IntegerField(default=0, verbose_name='Количество браков')),
                ('monthly_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Заработок за месяц')),
                ('efficiency', models.IntegerField(default=0, verbose_name='Эффективность (%)')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Оклад')),
                ('avg_productivity', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Средняя производительность (ед./день)')),
                ('defect_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Процент брака (%)')),
                ('hours_worked', models.IntegerField(default=0, verbose_name='Отработано часов')),
                ('overtime_hours', models.IntegerField(default=0, verbose_name='Сверхурочные часы')),
                ('quality_score', models.IntegerField(default=0, verbose_name='Качество продукции (0-10)')),
                ('deadline_compliance', models.IntegerField(default=0, verbose_name='Соблюдение сроков (%)')),
                ('initiative_score', models.IntegerField(default=0, verbose_name='Инициативность (0-10)')),
                ('teamwork_score', models.IntegerField(default=0, verbose_name='Командная работа (0-10)')),
                ('productivity_chart', models.JSONField(default=list, verbose_name='График производительности (7 дней)')),
                ('monthly_productivity', models.JSONField(default=list, verbose_name='Производительность за месяц (30 дней)')),
                ('salary_history', models.JSONField(default=list, verbose_name='История заработка (6 месяцев)')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Статистика сотрудника',
                'verbose_name_plural': 'Статистика сотрудников',
            },
        ),
        migrations.CreateModel(
            name='EmployeeTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст задачи')),
                ('completed', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Задача сотрудника',
                'verbose_name_plural': 'Задачи сотрудников',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport_main', 'Паспорт (основная страница)'), ('passport_registration', 'Паспорт (прописка)'), ('employment_contract', 'Трудовой договор'), ('work_book', 'Трудовая книжка'), ('employment_order', 'Приказ о приеме'), ('medical_book', 'Медицинская книжка'), ('other', 'Другое')], max_length=50, verbose_name='Тип документа')),
                ('status', models.CharField(choices=[('uploaded', 'Загружен'), ('pending', 'Ожидает'), ('expired', 'Просрочен'), ('missing', 'Отсутствует')], default='missing', max_length=20, verbose_name='Статус')),
                ('file', models.FileField(blank=True, null=True, upload_to='employee_documents/', verbose_name='Файл документа')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Дата истечения')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL, verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Документ сотрудника',
                'verbose_name_plural': 'Документы сотрудников',
                'unique_together': {('employee', 'document_type')},
            },
        ),
    ]
